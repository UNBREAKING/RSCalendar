'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _util = require('./util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Tab = function Tab(_ref) {
  var className = _ref.className,
      active = _ref.active,
      children = _ref.children,
      props = (0, _objectWithoutProperties3.default)(_ref, ['className', 'active', 'children']);

  var pprops = (0, _util.cleanProps)(props, Tab.propTypes);
  delete pprops.title;
  delete pprops.eventKey;
  delete pprops.menuItems;
  delete pprops.menuIcon;

  var tabClassNames = (0, _classnames2.default)(className, 'slds-tabs__content', 'slds-' + (active ? 'show' : 'hide'));
  return _react2.default.createElement(
    'div',
    (0, _extends3.default)({ className: tabClassNames, role: 'tabpanel' }, pprops),
    children
  );
};

Tab.propTypes = {
  className: _react.PropTypes.string,
  active: _react.PropTypes.bool,
  title: _react.PropTypes.string,
  menu: _react.PropTypes.element,
  menuItems: _react.PropTypes.arrayOf(_react.PropTypes.element),
  menuIcon: _react.PropTypes.string,
  children: _react.PropTypes.node,
  eventKey: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number])
};

exports.default = Tab;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zY3JpcHRzL1RhYi5qcyJdLCJuYW1lcyI6WyJUYWIiLCJjbGFzc05hbWUiLCJhY3RpdmUiLCJjaGlsZHJlbiIsInByb3BzIiwicHByb3BzIiwicHJvcFR5cGVzIiwidGl0bGUiLCJldmVudEtleSIsIm1lbnVJdGVtcyIsIm1lbnVJY29uIiwidGFiQ2xhc3NOYW1lcyIsInN0cmluZyIsImJvb2wiLCJtZW51IiwiZWxlbWVudCIsImFycmF5T2YiLCJub2RlIiwib25lT2ZUeXBlIiwibnVtYmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUVBLElBQU1BLE1BQU0sU0FBTkEsR0FBTSxPQUErQztBQUFBLE1BQTVDQyxTQUE0QyxRQUE1Q0EsU0FBNEM7QUFBQSxNQUFqQ0MsTUFBaUMsUUFBakNBLE1BQWlDO0FBQUEsTUFBekJDLFFBQXlCLFFBQXpCQSxRQUF5QjtBQUFBLE1BQVpDLEtBQVk7O0FBQ3pELE1BQU1DLFNBQVMsc0JBQVdELEtBQVgsRUFBa0JKLElBQUlNLFNBQXRCLENBQWY7QUFDQSxTQUFPRCxPQUFPRSxLQUFkO0FBQ0EsU0FBT0YsT0FBT0csUUFBZDtBQUNBLFNBQU9ILE9BQU9JLFNBQWQ7QUFDQSxTQUFPSixPQUFPSyxRQUFkOztBQUVBLE1BQU1DLGdCQUFnQiwwQkFDcEJWLFNBRG9CLEVBRXBCLG9CQUZvQixhQUdaQyxTQUFTLE1BQVQsR0FBa0IsTUFITixFQUF0QjtBQUtBLFNBQ0U7QUFBQTtBQUFBLDZCQUFLLFdBQVlTLGFBQWpCLEVBQWlDLE1BQUssVUFBdEMsSUFBc0ROLE1BQXREO0FBQ0lGO0FBREosR0FERjtBQUtELENBakJEOztBQW9CQUgsSUFBSU0sU0FBSixHQUFnQjtBQUNkTCxhQUFXLGlCQUFVVyxNQURQO0FBRWRWLFVBQVEsaUJBQVVXLElBRko7QUFHZE4sU0FBTyxpQkFBVUssTUFISDtBQUlkRSxRQUFNLGlCQUFVQyxPQUpGO0FBS2ROLGFBQVcsaUJBQVVPLE9BQVYsQ0FBa0IsaUJBQVVELE9BQTVCLENBTEc7QUFNZEwsWUFBVSxpQkFBVUUsTUFOTjtBQU9kVCxZQUFVLGlCQUFVYyxJQVBOO0FBUWRULFlBQVUsaUJBQVVVLFNBQVYsQ0FBb0IsQ0FDNUIsaUJBQVVOLE1BRGtCLEVBRTVCLGlCQUFVTyxNQUZrQixDQUFwQjtBQVJJLENBQWhCOztrQkFjZW5CLEciLCJmaWxlIjoiVGFiLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IFByb3BUeXBlcyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IHsgY2xlYW5Qcm9wcyB9IGZyb20gJy4vdXRpbCc7XG5cbmNvbnN0IFRhYiA9ICh7IGNsYXNzTmFtZSwgYWN0aXZlLCBjaGlsZHJlbiwgLi4ucHJvcHMgfSkgPT4ge1xuICBjb25zdCBwcHJvcHMgPSBjbGVhblByb3BzKHByb3BzLCBUYWIucHJvcFR5cGVzKTtcbiAgZGVsZXRlIHBwcm9wcy50aXRsZTtcbiAgZGVsZXRlIHBwcm9wcy5ldmVudEtleTtcbiAgZGVsZXRlIHBwcm9wcy5tZW51SXRlbXM7XG4gIGRlbGV0ZSBwcHJvcHMubWVudUljb247XG5cbiAgY29uc3QgdGFiQ2xhc3NOYW1lcyA9IGNsYXNzbmFtZXMoXG4gICAgY2xhc3NOYW1lLFxuICAgICdzbGRzLXRhYnNfX2NvbnRlbnQnLFxuICAgIGBzbGRzLSR7YWN0aXZlID8gJ3Nob3cnIDogJ2hpZGUnfWBcbiAgKTtcbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17IHRhYkNsYXNzTmFtZXMgfSByb2xlPSd0YWJwYW5lbCcgeyAuLi5wcHJvcHMgfT5cbiAgICAgIHsgY2hpbGRyZW4gfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuXG5UYWIucHJvcFR5cGVzID0ge1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGFjdGl2ZTogUHJvcFR5cGVzLmJvb2wsXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBtZW51OiBQcm9wVHlwZXMuZWxlbWVudCxcbiAgbWVudUl0ZW1zOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuZWxlbWVudCksXG4gIG1lbnVJY29uOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm5vZGUsXG4gIGV2ZW50S2V5OiBQcm9wVHlwZXMub25lT2ZUeXBlKFtcbiAgICBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIFByb3BUeXBlcy5udW1iZXIsXG4gIF0pLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgVGFiO1xuIl19